syntax = "proto3";
package v1;

option go_package = "github.com/BruceMacD/vvallet/internal/v1";

import "validate/validate.proto";
import "google/api/annotations.proto";

enum Algorithm {
    ECDSA_P384 = 0; // currently this is the only signing algorithm supported
}

message PublicKey {
    string id = 1;
    int64 created = 2;
    int64 updated = 3;
    
    Algorithm alg = 4;
    string serial = 5 [(validate.rules).string.min_len = 1];
}

message Identity {
    string id = 1;
    int64 created = 2;
    int64 updated = 3;

    string alias = 4;
    PublicKey publicKey = 5;
}

message RegistrationRequest {
    string alias = 1 [(validate.rules).string.min_len = 1];
    PublicKey publicKey = 2 [(validate.rules).message.required = true];
}

message AuthenticationRequest {
    string alias = 1 [(validate.rules).string.min_len = 1];
}

message JWT {
    string token = 1 [(validate.rules).string.min_len = 1];
}

message IdentityByAliasRequest {
    string alias = 1 [(validate.rules).string.min_len = 1];
}

service VValletService {
    rpc Register(RegistrationRequest) returns (Identity) {
        option (google.api.http) = {
            post: "/v1/register"
            body: "*"
        };
    }

    rpc IdentityByAlias(IdentityByAliasRequest) returns (Identity) {
        option (google.api.http) = {
            get: "/v1/vvallet/{alias}"
        };
    }

    rpc RequestAuthentication(AuthenticationRequest) returns (JWT) {
        option (google.api.http) = {
            post: "/v1/authenticate"
            body: "*"
        };
    }
}